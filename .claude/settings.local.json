{
  "permissions": {
    "allow": [
      "WebFetch(domain:community.netwrix.com)",
      "WebFetch(domain:community.netwrix.com)",
      "Bash(git checkout:*)",
      "Bash(cp:*)",
      "Bash(npm install)",
      "Bash(npm start)",
      "Bash(npm run start:*)",
      "Bash(npx docusaurus start:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(npx kill-port:*)",
      "Bash(taskkill:*)",
      "Bash(cmd /c:*)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(tree:*)",
      "Bash(awk:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(xargs sed:*)",
      "Bash(powershell:*)",
      "Bash(npm run build:*)",
      "Bash(set UV_THREADPOOL_SIZE=16)",
      "Bash(npm run clear:*)",
      "Bash(cat:*)",
      "Bash($ENV:DOCS_PRODUCT=\"endpointprotector\")",
      "Bash(DOCS_PRODUCT=\"endpointprotector\" npm run build)",
      "Bash(Get-Process node -ErrorAction SilentlyContinue)",
      "Bash(Stop-Process -Force)",
      "Bash(dir \"C:\\GITLOCAL\\docs\\docs\\endpointpolicymanager\\components\")",
      "Bash(xcopy:*)",
      "Bash(robocopy:*)",
      "Bash(dir \"C:\\GITLOCAL\\docs\\docs\\endpointpolicymanager\\components\\javaenterpriserules\")",
      "Bash(dir \"C:\\GITLOCAL\\docs\\docs\\endpointpolicymanager\\components\\javaenterpriserules\\manual\")",
      "Bash(dir \"C:\\GITLOCAL\\docs\\docs\\endpointpolicymanager\\components\\applicationsettingsmanager\")",
      "Bash(dir:*)",
      "Bash(timeout 30 npm start)",
      "Bash($ENV:DOCS_PRODUCT=\"endpointpolicymanager\")",
      "Bash(timeout:*)",
      "Bash(for file in \"gettingstarted/misc/knowledgebase/gettingstarted/prepare.md\" \"licensing/knowledgebase/troubleshooting/enterprisefull.md\" \"components/applicationsettingsmanager/technotes/troubleshooting/mmc.md\" \"licensing/installation/videolearningcenter/videolearningcenter.md\" \"licensing/installation/knowledgebase/updating/ringsupgrade.md\")",
      "Bash(do echo \"Processing: $file\")",
      "Bash(echo \"Updated: $file\")",
      "Bash(done)",
      "Bash(for:*)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(do echo \"Checking: $file\")",
      "Bash(if [ -f \"docs/endpointpolicymanager/$file\" ])",
      "Bash(then echo \"✓ EXISTS\")",
      "Bash(else echo \"✗ MISSING\")",
      "Bash(fi)",
      "Bash(do cp \"C:\\GITLOCAL\\docs\\docs\\endpointpolicymanager\\manuals\\gporeductionandtrans\\preferences\\gettingstarted$file\" \"C:\\GITLOCAL\\docs\\docs\\endpointpolicymanager\\components\\preferencesmanager\\manual\\gettingstarted$file\")",
      "Bash(rg:*)",
      "Bash(do sed -i 's/knowledgebase\\/leastprivilegemanager/components\\/endpointprivilegemanager/g' \"$file\")",
      "Bash(sort:*)",
      "Bash(do echo \"=== $component ===\")",
      "Bash(if [ -f \"$component/knowledgebase/knowledgebase.md\" ])",
      "Bash(if [ -f \"$component/technotes/knowledgebase.md\" ])",
      "Bash(if [ -f \"$component/videolearningcenter/videolearningcenter.md\" ])",
      "Bash(else echo \"✗ videolearningcenter/videolearningcenter.md\")",
      "Bash(if [ -f \"$component/videos/videolearningcenter.md\" ])",
      "Bash(else echo \"✗ videos/videolearningcenter.md\")",
      "Bash(if [ -f \"$component/manual/overview.md\" ])",
      "Bash(do if [ -d \"$component\" ])",
      "Bash([ \"$component\" != \".\" ])",
      "Bash(then if [ -d \"$component/knowledgebase\" ])",
      "Bash([ -d \"$component/technotes\" ])",
      "Bash([ -d \"$component/videolearningcenter\" ])",
      "Bash([ -d \"$component/videos\" ])",
      "Bash(then echo \"Component: $component\")",
      "Bash(do if [ -d \"$component/manual\" ])",
      "Bash(else echo \"✗ $component has no manual/\")",
      "Bash(do sed -i 's|/docs/endpointpolicymanager/knowledgebase/knowledgebase\\.md|/docs/endpointpolicymanager/|g' \"docs/endpointpolicymanager/$file\")",
      "Bash(do sed -i 's|/docs/endpointpolicymanager/installation/knowledgebase/antivirussystemsoftware/|/docs/endpointpolicymanager/upgrademaintenance/antivirussystemsoftware/|g' \"docs/endpointpolicymanager/$file\")",
      "Bash(do sed -i 's|/docs/endpointpolicymanager/gettingstarted/cloud|/docs/endpointpolicymanager/deliverymethods/cloud|g' \"docs/endpointpolicymanager/$file\")",
      "Bash(do sed -i 's|/docs/endpointpolicymanager/gettingstarted/grouppolicy|/docs/endpointpolicymanager/deliverymethods/grouppolicy|g' \"docs/endpointpolicymanager/$file\")",
      "Bash(do sed -i 's|gettingstarted/cloud|deliverymethods/cloud|g; s|gettingstarted/grouppolicy|deliverymethods/grouppolicy|g; s|gettingstarted/mdm|deliverymethods/mdm|g' \"$file\")",
      "Bash(do sed -i 's|/docs/endpointpolicymanager/gettingstarted/mdm|/docs/endpointpolicymanager/deliverymethods/mdm|g' \"docs/endpointpolicymanager/$file\")",
      "Bash(do sed -i 's|/docs/endpointpolicymanager/gettingstarted/mdm/|/docs/endpointpolicymanager/deliverymethods/mdm/|g' \"docs/endpointpolicymanager/$file\")"
    ],
    "deny": []
  }
}